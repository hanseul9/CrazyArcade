// JavaObjClient.java
// ObjecStream 사용하는 채팅 Client

import java.awt.Color;
import java.awt.EventQueue;
import java.awt.Graphics;
import java.awt.Image;

import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.border.EmptyBorder;
import javax.swing.JLabel;
import javax.swing.JTextField;
import javax.swing.SwingConstants;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.io.File;
import java.awt.event.ActionEvent;

import javax.sound.sampled.AudioInputStream;
import javax.sound.sampled.AudioSystem;
import javax.sound.sampled.Clip;
import javax.sound.sampled.FloatControl;



public class ArcadeClientMain extends JFrame{
	

		
	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private JPanel contentPane;
	private JTextField txtUserName;
	private JTextField txtIpAddress;
	private JTextField txtPortNumber;
	public ImageIcon bg = null;
	
	JScrollPane scrollPane;
	

	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					ArcadeClientMain frame = new ArcadeClientMain();
					
					frame.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}
	

	public ArcadeClientMain() {  // 생성자 ------------------------
		
		Play("music/main.wav");
		
		ImageIcon bg = new ImageIcon("./connectIMG/login.jpg");//배경화면
		
		ImageIcon img = new ImageIcon("./connectIMG/start.png");//스타트 버튼
		ImageIcon img2 = new ImageIcon("./connectIMG/start2.png");//스타트 버튼 마우스 올렸을때
		
		
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 690, 483);
		contentPane = new JPanel() {
			 public void paintComponent(Graphics g) {
	                g.drawImage(bg.getImage(), 0, 0, null);
	                setOpaque(false); //그림을 표시하게 설정,투명하게 조절
	                super.paintComponent(g);
	            }
		};
		scrollPane = new JScrollPane(contentPane);
		setContentPane(scrollPane);
		
		
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));
		setContentPane(contentPane);
		contentPane.setLayout(null);
		
		
		JLabel lblNewLabel = new JLabel("User Name");
		lblNewLabel.setBounds(220, 264, 82, 33);
		contentPane.add(lblNewLabel);
		
		txtUserName = new JTextField();
		txtUserName.setHorizontalAlignment(SwingConstants.CENTER);
		txtUserName.setBounds(309, 264, 116, 33);
		contentPane.add(txtUserName);
		txtUserName.setColumns(10);
		lblNewLabel.setOpaque(false); 
		//lblNewLabel.setBackground(Color.WHITE); //글자 배경색 변경
		lblNewLabel.setForeground(Color.WHITE); //글자색 변경
		
		JLabel lblIpAddress = new JLabel("IP Address");
		lblIpAddress.setBounds(220, 318, 82, 33);
		contentPane.add(lblIpAddress);
		
		txtIpAddress = new JTextField();
		txtIpAddress.setHorizontalAlignment(SwingConstants.CENTER);
		txtIpAddress.setText("127.0.0.1");
		txtIpAddress.setColumns(10);
		txtIpAddress.setBounds(309, 318, 116, 33);
		contentPane.add(txtIpAddress);
		lblIpAddress.setForeground(Color.WHITE); //글자색 변경
		
		JLabel lblPortNumber = new JLabel("Port Number");
		lblPortNumber.setBounds(580, 359, 82, 33);
		contentPane.add(lblPortNumber);
		
		txtPortNumber = new JTextField();
		txtPortNumber.setText("30000");
		txtPortNumber.setHorizontalAlignment(SwingConstants.CENTER);
		txtPortNumber.setColumns(10);
		txtPortNumber.setBounds(546, 399, 116, 33);
		contentPane.add(txtPortNumber);
		lblPortNumber.setForeground(Color.WHITE); //글자색 변경
		
		
		//시작버튼
		JButton btnConnect = new JButton(img);
		btnConnect.setRolloverIcon(img2);//버튼에 마우스 올라가면 이미지 변경
		btnConnect.setBorderPainted(false);// 버튼 테두리 설정해제
		btnConnect.setBounds(235, 377, 190, 55);
		contentPane.add(btnConnect);
		Myaction action = new Myaction();
		btnConnect.addActionListener(action);
		txtUserName.addActionListener(action);
		txtIpAddress.addActionListener(action);
		txtPortNumber.addActionListener(action);
		
		
		
	}
	class Myaction implements ActionListener // 내부클래스로 액션 이벤트 처리 클래스
	{
		@Override
		public void actionPerformed(ActionEvent e) {
			String username = txtUserName.getText().trim();
			String ip_addr = txtIpAddress.getText().trim();
			String port_no = txtPortNumber.getText().trim();
			ArcadeClientGameView view = new ArcadeClientGameView(username, ip_addr, port_no);
			setVisible(false);
		}
	}
	
	 private void Play(String fileName) //음악을 재생하는 함수
	    {
	        try
	        {
	            AudioInputStream ais = AudioSystem.getAudioInputStream(new File(fileName));
	            Clip clip = AudioSystem.getClip();
	            clip.stop();
	            clip.open(ais);
	            FloatControl gainControl = (FloatControl) clip.getControl(FloatControl.Type.MASTER_GAIN);
				gainControl.setValue(-15.0f); //볼륨조절
	            clip.start();
	        }
	        catch (Exception ex)
	        {
	        }
	    }
}


